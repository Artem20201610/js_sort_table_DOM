{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableRows","tBodies","rows","compareTextCells","left","right","cellIndex","cells","innerText","localeCompare","compareNumsCells","compareSalaryCells","toNumber","number","slice","split","join","tHead","addEventListener","e","header","target","sortedRows","Array","from","sort","append"],"mappings":";AAAA,aA+CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7CD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYH,EAAMI,QAAQ,GAAGC,KA0BnC,SAASC,EAAiBC,EAAMC,EAAOC,GAC9BF,OAAAA,EAAKG,MAAMD,GAAWE,UAC1BC,cAAcJ,EAAME,MAAMD,GAAWE,WAG1C,SAASE,EAAiBN,EAAMC,EAAOC,GAC9BF,OAAAA,EAAKG,MAAMD,GAAWE,UAAYH,EAAME,MAAMD,GAAWE,UAGlE,SAASG,EAAmBP,EAAMC,EAAOC,GAChCM,OAAAA,EAASR,EAAKG,MAAMD,GAAWE,WAClCI,EAASP,EAAME,MAAMD,GAAWE,WAGtC,SAASI,EAASC,GAGT,OAFWA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAvCpDnB,EAAMoB,MAAMC,iBAAiB,QAAS,SAAAC,GAAK,IAAA,EACnCC,EAASD,EAAEE,OACXf,EAAYc,EAAOd,UACnBgB,EAAaC,MAAMC,KAAKxB,GAEtBoB,OAAAA,EAAOZ,WACR,IAAA,MACHc,EAAWG,KAAK,SAACrB,EAAMC,GACrBK,OAAAA,EAAiBN,EAAMC,EAAOC,KAChC,MACG,IAAA,OACA,IAAA,WACHgB,EAAWG,KAAK,SAACrB,EAAMC,GACrBF,OAAAA,EAAiBC,EAAMC,EAAOC,KAChC,MACG,IAAA,SACHgB,EAAWG,KAAK,SAACrB,EAAMC,GACrBM,OAAAA,EAAmBP,EAAMC,EAAOC,MAItCT,EAAAA,EAAMI,QAAQ,IAAGyB,OAAUJ,MAAAA,EAAAA,EAAAA","file":"main.56228538.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableRows = table.tBodies[0].rows;\n\ntable.tHead.addEventListener('click', e => {\n  const header = e.target;\n  const cellIndex = header.cellIndex;\n  const sortedRows = Array.from(tableRows);\n\n  switch (header.innerText) {\n    case 'Age':\n      sortedRows.sort((left, right) =>\n        compareNumsCells(left, right, cellIndex));\n      break;\n    case 'Name':\n    case 'Position':\n      sortedRows.sort((left, right) =>\n        compareTextCells(left, right, cellIndex));\n      break;\n    case 'Salary':\n      sortedRows.sort((left, right) =>\n        compareSalaryCells(left, right, cellIndex));\n      break;\n  }\n\n  table.tBodies[0].append(...sortedRows);\n});\n\nfunction compareTextCells(left, right, cellIndex) {\n  return left.cells[cellIndex].innerText\n    .localeCompare(right.cells[cellIndex].innerText);\n}\n\nfunction compareNumsCells(left, right, cellIndex) {\n  return left.cells[cellIndex].innerText - right.cells[cellIndex].innerText;\n}\n\nfunction compareSalaryCells(left, right, cellIndex) {\n  return toNumber(left.cells[cellIndex].innerText)\n    - toNumber(right.cells[cellIndex].innerText);\n}\n\nfunction toNumber(number) {\n  const converted = number.slice(1).split(',').join('');\n\n  return +converted;\n}\n"]}